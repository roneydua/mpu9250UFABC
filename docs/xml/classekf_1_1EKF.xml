<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classekf_1_1EKF" kind="class" language="C++" prot="public">
    <compoundname>ekf::EKF</compoundname>
    <includes refid="EKF_8h" local="no">EKF.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classekf_1_1EKF_1aee84ca91742c11dd89683930a58d59e3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ekf::EKF::dt</definition>
        <argsstring></argsstring>
        <name>dt</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intervalo de tempo para integração </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="26" column="1" bodyfile="lib/EKF/EKF.h" bodystart="26" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" compoundref="EKF_8cpp" startline="199" endline="212">integrationOfStates</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="main_8cpp_1a50d45340b3399db75c34c3b9f67c1b11" compoundref="main_8cpp" startline="25" endline="36">telemetria</referencedby>
        <referencedby refid="classekf_1_1EKF_1ad5949e9e8eae2938a332af03a8ec353b" compoundref="EKF_8cpp" startline="168" endline="173">updatefi</referencedby>
        <referencedby refid="classekf_1_1EKF_1a84048d25ebfb6431d7b1372b7315a7a3" compoundref="EKF_8cpp" startline="106" endline="148">updateOfMeasurements</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" prot="public" static="no" mutable="no">
        <type>Eigen::Vector3f</type>
        <definition>Eigen::Vector3f ekf::EKF::accel</definition>
        <argsstring></argsstring>
        <name>accel</name>
        <initializer>= Eigen::Vector3f::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vetor com as medidas do aceleromeotro </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="28" column="1" bodyfile="lib/EKF/EKF.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" compoundref="EKF_8cpp" startline="30" endline="48">begin</referencedby>
        <referencedby refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" compoundref="EKF_8cpp" startline="199" endline="212">integrationOfStates</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="main_8cpp_1a50d45340b3399db75c34c3b9f67c1b11" compoundref="main_8cpp" startline="25" endline="36">telemetria</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae6c0295a32e90b9594ad10bb1061b62b" compoundref="EKF_8cpp" startline="152" endline="162">updateF_G</referencedby>
        <referencedby refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1add206b1c04f4332dd99d1c1f495ed981" prot="public" static="no" mutable="no">
        <type>Eigen::Vector3f</type>
        <definition>Eigen::Vector3f ekf::EKF::localGravity</definition>
        <argsstring></argsstring>
        <name>localGravity</name>
        <initializer>= Eigen::Vector3f::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vetor de graviade escrita no sistema local. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="30" column="1" bodyfile="lib/EKF/EKF.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a7225ed157eefaf96a9b98b0683bd3f6d" prot="public" static="no" mutable="no">
        <type>Eigen::Vector3f</type>
        <definition>Eigen::Vector3f ekf::EKF::navegationGravity</definition>
        <argsstring></argsstring>
        <name>navegationGravity</name>
        <initializer>{0.0f, 0.0f, 9.81f}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gravidade no sistema de navegação </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="32" column="1" bodyfile="lib/EKF/EKF.h" bodystart="32" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" compoundref="EKF_8cpp" startline="199" endline="212">integrationOfStates</referencedby>
        <referencedby refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1af990ea0dbcd3f286f04584ab663d08e6" prot="public" static="no" mutable="no">
        <type>Eigen::Vector3f</type>
        <definition>Eigen::Vector3f ekf::EKF::gyro</definition>
        <argsstring></argsstring>
        <name>gyro</name>
        <initializer>= Eigen::Vector3f::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vetor com as medidas do giroscopios </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="34" column="1" bodyfile="lib/EKF/EKF.h" bodystart="34" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" compoundref="EKF_8cpp" startline="30" endline="48">begin</referencedby>
        <referencedby refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" compoundref="EKF_8cpp" startline="199" endline="212">integrationOfStates</referencedby>
        <referencedby refid="main_8cpp_1a50d45340b3399db75c34c3b9f67c1b11" compoundref="main_8cpp" startline="25" endline="36">telemetria</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae6c0295a32e90b9594ad10bb1061b62b" compoundref="EKF_8cpp" startline="152" endline="162">updateF_G</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a3f84435c646a27ad0f922e5205c13eb3" prot="public" static="no" mutable="no">
        <type>Eigen::Vector3f</type>
        <definition>Eigen::Vector3f ekf::EKF::mag</definition>
        <argsstring></argsstring>
        <name>mag</name>
        <initializer>= Eigen::Vector3f::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vetor com as medidas do magnetometros </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="36" column="1" bodyfile="lib/EKF/EKF.h" bodystart="36" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" compoundref="EKF_8cpp" startline="30" endline="48">begin</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="main_8cpp_1a50d45340b3399db75c34c3b9f67c1b11" compoundref="main_8cpp" startline="25" endline="36">telemetria</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a3ba07296b1ad2a2b1b00cf41ef3ff996" prot="public" static="no" mutable="no">
        <type>Eigen::Vector3f</type>
        <definition>Eigen::Vector3f ekf::EKF::magOrthogonalGrav</definition>
        <argsstring></argsstring>
        <name>magOrthogonalGrav</name>
        <initializer>= Eigen::Vector3f::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vetor com as medias do magnetometro sem as projeções na direção do vetor gravitacional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="39" column="1" bodyfile="lib/EKF/EKF.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="classekf_1_1EKF_1a94bc601335d20c0a058e8e8600d912e7" compoundref="EKF_8cpp" startline="179" endline="195">updateH</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1aa38bc83dfb656519cfcda0c0a589ef16" prot="public" static="no" mutable="no">
        <type>Eigen::Vector4f</type>
        <definition>Eigen::Vector4f ekf::EKF::q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <initializer>{1.0f, 0.0f, 0.0f, 0.0f}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Quaternion de atitude </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="41" column="1" bodyfile="lib/EKF/EKF.h" bodystart="41" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" compoundref="EKF_8cpp" startline="199" endline="212">integrationOfStates</referencedby>
        <referencedby refid="main_8cpp_1a50d45340b3399db75c34c3b9f67c1b11" compoundref="main_8cpp" startline="25" endline="36">telemetria</referencedby>
        <referencedby refid="classdrone_1_1Drone_1a76f6bdaa9ba1a10abd1b727c1681a2f1" compoundref="drone_8py" startline="59" endline="62">drone.Drone.updateStates</referencedby>
        <referencedby refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1adc3de40884689bb897ebe90979d6f28f" prot="public" static="no" mutable="no">
        <type>Eigen::Vector3f</type>
        <definition>Eigen::Vector3f ekf::EKF::euler</definition>
        <argsstring></argsstring>
        <name>euler</name>
        <initializer>{0.0f, 0.0f, 0.0f}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ângulos de Euler na convenção 3-2-1 Tait-Bryan </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="43" column="1" bodyfile="lib/EKF/EKF.h" bodystart="43" bodyend="-1"/>
        <referencedby refid="main_8cpp_1a50d45340b3399db75c34c3b9f67c1b11" compoundref="main_8cpp" startline="25" endline="36">telemetria</referencedby>
        <referencedby refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a62d97c4efde36112d3c59afa88d7bcfb" prot="public" static="no" mutable="no">
        <type>Eigen::Vector3f</type>
        <definition>Eigen::Vector3f ekf::EKF::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <initializer>= Eigen::Vector3f::Zero(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vetor de estados estimados do <ref refid="classekf_1_1EKF" kindref="compound">EKF</ref>. O erros são: as três componetes da parte vetorial do quaternion, os três bias do giroscópio e as compoenentes da velocidade no sistema NED. [ <delta/><bold>q</bold> <delta/><bold>b</bold> <delta/><bold>r</bold>]</para><para>Velocidade linear m/s </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="58" column="1" bodyfile="lib/EKF/EKF.h" bodystart="58" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" compoundref="EKF_8cpp" startline="199" endline="212">integrationOfStates</referencedby>
        <referencedby refid="classekf_1_1EKF_1a84048d25ebfb6431d7b1372b7315a7a3" compoundref="EKF_8cpp" startline="106" endline="148">updateOfMeasurements</referencedby>
        <referencedby refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1ad6e815d418433b79328bd90dd6ef1344" prot="public" static="no" mutable="no">
        <type>Eigen::Vector3f</type>
        <definition>Eigen::Vector3f ekf::EKF::deltar</definition>
        <argsstring></argsstring>
        <name>deltar</name>
        <initializer>= Eigen::Vector3f::Zero(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Aceleração linear m/s^2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="60" column="1" bodyfile="lib/EKF/EKF.h" bodystart="60" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a2f7f579eb38461f7396cca2a9a846bbb" prot="public" static="no" mutable="no">
        <type>Eigen::Matrix3f</type>
        <definition>Eigen::Matrix3f ekf::EKF::mcd</definition>
        <argsstring></argsstring>
        <name>mcd</name>
        <initializer>= Eigen::Matrix3f::Identity()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matrix de cossenos diretores </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="62" column="1" bodyfile="lib/EKF/EKF.h" bodystart="62" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" compoundref="EKF_8cpp" startline="199" endline="212">integrationOfStates</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae6c0295a32e90b9594ad10bb1061b62b" compoundref="EKF_8cpp" startline="152" endline="162">updateF_G</referencedby>
        <referencedby refid="classekf_1_1EKF_1a94bc601335d20c0a058e8e8600d912e7" compoundref="EKF_8cpp" startline="179" endline="195">updateH</referencedby>
        <referencedby refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a8d016a5adf9aa5f33a8c9e1f7dd73592" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t ekf::EKF::messageGPS</definition>
        <argsstring></argsstring>
        <name>messageGPS</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="65" column="1" bodyfile="lib/EKF/EKF.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1a84048d25ebfb6431d7b1372b7315a7a3" compoundref="EKF_8cpp" startline="106" endline="148">updateOfMeasurements</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t ekf::EKF::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <initializer>= 9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Número de linhas da matriz H. Assume 6 quando apenas a MARG está disponível e 9 quando MARG/GPS estão disponíveis. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="69" column="1" bodyfile="lib/EKF/EKF.h" bodystart="69" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" compoundref="EKF_8cpp" startline="30" endline="48">begin</referencedby>
        <referencedby refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" compoundref="EKF_8cpp" startline="199" endline="212">integrationOfStates</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae6c0295a32e90b9594ad10bb1061b62b" compoundref="EKF_8cpp" startline="152" endline="162">updateF_G</referencedby>
        <referencedby refid="classekf_1_1EKF_1a84048d25ebfb6431d7b1372b7315a7a3" compoundref="EKF_8cpp" startline="106" endline="148">updateOfMeasurements</referencedby>
        <referencedby refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</referencedby>
        <referencedby refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t ekf::EKF::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Números de estados. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="71" column="1" bodyfile="lib/EKF/EKF.h" bodystart="71" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" compoundref="EKF_8cpp" startline="30" endline="48">begin</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="classekf_1_1EKF_1ad5949e9e8eae2938a332af03a8ec353b" compoundref="EKF_8cpp" startline="168" endline="173">updatefi</referencedby>
        <referencedby refid="classekf_1_1EKF_1a84048d25ebfb6431d7b1372b7315a7a3" compoundref="EKF_8cpp" startline="106" endline="148">updateOfMeasurements</referencedby>
        <referencedby refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a2ab740148a4eff83947603d4338ff071" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ekf::EKF::sigma_giro</definition>
        <argsstring></argsstring>
        <name>sigma_giro</name>
        <initializer>= 0.005 * 0.005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matriz de covariancia de processo <simplesect kind="attention"><para>A matriz <ref refid="classekf_1_1EKF_1a4069373f775dd5d06c503ec5a20b06cd" kindref="member">Q</ref> é utilizada no produto de matrizes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="75" column="1" bodyfile="lib/EKF/EKF.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a4af1f4b86d797c10820b611fb587370a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ekf::EKF::sigma_bias_giro</definition>
        <argsstring></argsstring>
        <name>sigma_bias_giro</name>
        <initializer>= 0.0001 * 0.0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="76" column="1" bodyfile="lib/EKF/EKF.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a2bc28e167984b8b6a81953867a1dd5c2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ekf::EKF::sigma_acel</definition>
        <argsstring></argsstring>
        <name>sigma_acel</name>
        <initializer>= 0.02 * 0.02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="77" column="1" bodyfile="lib/EKF/EKF.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1ac97bb3b83e3414e2f51b97c9cb5bd68e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ekf::EKF::sigma_bias_acel</definition>
        <argsstring></argsstring>
        <name>sigma_bias_acel</name>
        <initializer>= 0.0001 * 0.0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="78" column="1" bodyfile="lib/EKF/EKF.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1aa9f5162233aa16adf828d3d4399320fe" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ekf::EKF::sigma_mag</definition>
        <argsstring></argsstring>
        <name>sigma_mag</name>
        <initializer>= 0.1 * 0.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="79" column="1" bodyfile="lib/EKF/EKF.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a9143cf103c9ff087f4fe71f53fefe19e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ekf::EKF::sigma_vel</definition>
        <argsstring></argsstring>
        <name>sigma_vel</name>
        <initializer>= 0.02 * 0.02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="80" column="1" bodyfile="lib/EKF/EKF.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a4069373f775dd5d06c503ec5a20b06cd" prot="public" static="no" mutable="no">
        <type>const Eigen::MatrixXf</type>
        <definition>const Eigen::MatrixXf ekf::EKF::Q</definition>
        <argsstring></argsstring>
        <name>Q</name>
        <initializer>=
      ((Eigen::VectorXf(<ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref>) &lt;&lt; <ref refid="classekf_1_1EKF_1a2ab740148a4eff83947603d4338ff071" kindref="member">sigma_giro</ref>, <ref refid="classekf_1_1EKF_1a2ab740148a4eff83947603d4338ff071" kindref="member">sigma_giro</ref>, <ref refid="classekf_1_1EKF_1a2ab740148a4eff83947603d4338ff071" kindref="member">sigma_giro</ref>,
        <ref refid="classekf_1_1EKF_1a4af1f4b86d797c10820b611fb587370a" kindref="member">sigma_bias_giro</ref>, <ref refid="classekf_1_1EKF_1a4af1f4b86d797c10820b611fb587370a" kindref="member">sigma_bias_giro</ref>, <ref refid="classekf_1_1EKF_1a4af1f4b86d797c10820b611fb587370a" kindref="member">sigma_bias_giro</ref>, <ref refid="classekf_1_1EKF_1a2bc28e167984b8b6a81953867a1dd5c2" kindref="member">sigma_acel</ref>,
        <ref refid="classekf_1_1EKF_1a2bc28e167984b8b6a81953867a1dd5c2" kindref="member">sigma_acel</ref>, <ref refid="classekf_1_1EKF_1a2bc28e167984b8b6a81953867a1dd5c2" kindref="member">sigma_acel</ref>, <ref refid="classekf_1_1EKF_1ac97bb3b83e3414e2f51b97c9cb5bd68e" kindref="member">sigma_bias_acel</ref>, <ref refid="classekf_1_1EKF_1ac97bb3b83e3414e2f51b97c9cb5bd68e" kindref="member">sigma_bias_acel</ref>, <ref refid="classekf_1_1EKF_1a2bc28e167984b8b6a81953867a1dd5c2" kindref="member">sigma_acel</ref>)
           .finished())
          .asDiagonal()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="81" column="1" bodyfile="lib/EKF/EKF.h" bodystart="81" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a5f29f91470f99c48240dfd41f1fc32e6" prot="public" static="no" mutable="no">
        <type>const Eigen::MatrixXf</type>
        <definition>const Eigen::MatrixXf ekf::EKF::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <initializer>=
      ((Eigen::VectorXf(<ref refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" kindref="member">p</ref>) &lt;&lt; <ref refid="classekf_1_1EKF_1a2bc28e167984b8b6a81953867a1dd5c2" kindref="member">sigma_acel</ref>, <ref refid="classekf_1_1EKF_1a2bc28e167984b8b6a81953867a1dd5c2" kindref="member">sigma_acel</ref>, <ref refid="classekf_1_1EKF_1a2bc28e167984b8b6a81953867a1dd5c2" kindref="member">sigma_acel</ref>, <ref refid="classekf_1_1EKF_1aa9f5162233aa16adf828d3d4399320fe" kindref="member">sigma_mag</ref>,
        <ref refid="classekf_1_1EKF_1aa9f5162233aa16adf828d3d4399320fe" kindref="member">sigma_mag</ref>, <ref refid="classekf_1_1EKF_1aa9f5162233aa16adf828d3d4399320fe" kindref="member">sigma_mag</ref>, <ref refid="classekf_1_1EKF_1a9143cf103c9ff087f4fe71f53fefe19e" kindref="member">sigma_vel</ref>, <ref refid="classekf_1_1EKF_1a9143cf103c9ff087f4fe71f53fefe19e" kindref="member">sigma_vel</ref>, <ref refid="classekf_1_1EKF_1a9143cf103c9ff087f4fe71f53fefe19e" kindref="member">sigma_vel</ref>)
           .finished())
          .asDiagonal()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matriz de covariancia de medidas. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="88" column="1" bodyfile="lib/EKF/EKF.h" bodystart="88" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a6ac75b28b1066175ed3d3dd4ff861f8f" prot="public" static="no" mutable="no">
        <type>Eigen::MatrixXf</type>
        <definition>Eigen::MatrixXf ekf::EKF::F</definition>
        <argsstring></argsstring>
        <name>F</name>
        <initializer>= Eigen::MatrixXf::Zero(<ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref>, <ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matrix de estados linearizada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="95" column="1" bodyfile="lib/EKF/EKF.h" bodystart="95" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" compoundref="EKF_8cpp" startline="30" endline="48">begin</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae6c0295a32e90b9594ad10bb1061b62b" compoundref="EKF_8cpp" startline="152" endline="162">updateF_G</referencedby>
        <referencedby refid="classekf_1_1EKF_1ad5949e9e8eae2938a332af03a8ec353b" compoundref="EKF_8cpp" startline="168" endline="173">updatefi</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a94669b63095dd91e43ab645c3e930643" prot="public" static="no" mutable="no">
        <type>Eigen::MatrixXf</type>
        <definition>Eigen::MatrixXf ekf::EKF::fi</definition>
        <argsstring></argsstring>
        <name>fi</name>
        <initializer>= Eigen::MatrixXf::Zero(<ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref>, <ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matriz Jacobiana dos estados </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="97" column="1" bodyfile="lib/EKF/EKF.h" bodystart="97" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="classekf_1_1EKF_1ad5949e9e8eae2938a332af03a8ec353b" compoundref="EKF_8cpp" startline="168" endline="173">updatefi</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1aa942935955d39b9e6125bbfe7deb02f1" prot="public" static="no" mutable="no">
        <type>Eigen::MatrixXf</type>
        <definition>Eigen::MatrixXf ekf::EKF::G</definition>
        <argsstring></argsstring>
        <name>G</name>
        <initializer>= Eigen::MatrixXf::Zero(<ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref>, <ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matriz G de ruido do processo </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="99" column="1" bodyfile="lib/EKF/EKF.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" compoundref="EKF_8cpp" startline="30" endline="48">begin</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="classekf_1_1EKF_1ae6c0295a32e90b9594ad10bb1061b62b" compoundref="EKF_8cpp" startline="152" endline="162">updateF_G</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1af3d9f149c542dae8e23b8bb6a71e896d" prot="public" static="no" mutable="no">
        <type>Eigen::MatrixXf</type>
        <definition>Eigen::MatrixXf ekf::EKF::P</definition>
        <argsstring></argsstring>
        <name>P</name>
        <initializer>= 100000.0f * Eigen::MatrixXf::Identity(n, n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matriz Covariancia </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="101" column="1" bodyfile="lib/EKF/EKF.h" bodystart="101" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
        <referencedby refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1ad468c35e1497e23df1a26d6dbbe0eb67" prot="public" static="no" mutable="no">
        <type>Eigen::MatrixXf</type>
        <definition>Eigen::MatrixXf ekf::EKF::H</definition>
        <argsstring></argsstring>
        <name>H</name>
        <initializer>= Eigen::MatrixXf::Zero(<ref refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" kindref="member">p</ref>, <ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matriz sensibilidade </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="103" column="1" bodyfile="lib/EKF/EKF.h" bodystart="103" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" compoundref="EKF_8cpp" startline="30" endline="48">begin</referencedby>
        <referencedby refid="classekf_1_1EKF_1a94bc601335d20c0a058e8e8600d912e7" compoundref="EKF_8cpp" startline="179" endline="195">updateH</referencedby>
        <referencedby refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1abd4e82d28621f8cf617f19a42a11eb29" prot="public" static="no" mutable="no">
        <type>Eigen::MatrixXf</type>
        <definition>Eigen::MatrixXf ekf::EKF::K</definition>
        <argsstring></argsstring>
        <name>K</name>
        <initializer>= Eigen::MatrixXf::Identity(<ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref>, <ref refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" kindref="member">p</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ganho de Kalman </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="105" column="1" bodyfile="lib/EKF/EKF.h" bodystart="105" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1a1a015f96a2f51461f6132eab3e301a94" prot="public" static="no" mutable="no">
        <type>Eigen::VectorXf</type>
        <definition>Eigen::VectorXf ekf::EKF::deltaChi</definition>
        <argsstring></argsstring>
        <name>deltaChi</name>
        <initializer>= Eigen::VectorXf::Zero(<ref refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" kindref="member">n</ref> + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vetor de estados perturbados do estados estimados do <ref refid="classekf_1_1EKF" kindref="compound">EKF</ref>. <simplesect kind="warning"><para>deltaChi possui dimensão n+1, o primeiro elemento não é calculado pelo filtro mas computado na (). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="111" column="1" bodyfile="lib/EKF/EKF.h" bodystart="111" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</referencedby>
        <referencedby refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classekf_1_1EKF_1acacdb7f209258937a6b1d21ab19a1a64" prot="public" static="no" mutable="no">
        <type>Eigen::VectorXf</type>
        <definition>Eigen::VectorXf ekf::EKF::deltaYObs</definition>
        <argsstring></argsstring>
        <name>deltaYObs</name>
        <initializer>= Eigen::VectorXf::Zero(<ref refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" kindref="member">p</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Erro das observações </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="113" column="1" bodyfile="lib/EKF/EKF.h" bodystart="113" bodyend="-1"/>
        <referencedby refid="classekf_1_1EKF_1a94bc601335d20c0a058e8e8600d912e7" compoundref="EKF_8cpp" startline="179" endline="195">updateH</referencedby>
        <referencedby refid="classekf_1_1EKF_1a84048d25ebfb6431d7b1372b7315a7a3" compoundref="EKF_8cpp" startline="106" endline="148">updateOfMeasurements</referencedby>
        <referencedby refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classekf_1_1EKF_1aea7bda69ce19f724930eb8c691272508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ekf::EKF::EKF</definition>
        <argsstring>()</argsstring>
        <name>EKF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="21" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Inicializacao do filtro de Kalman. </para>        </briefdescription>
        <detaileddescription>
<para>Inicializa e configura:o GPS, a classe timeClass, instancia os sensores <ref refid="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" kindref="member">accel</ref>, <ref refid="classekf_1_1EKF_1af990ea0dbcd3f286f04584ab663d08e6" kindref="member">gyro</ref> e <ref refid="classekf_1_1EKF_1a3f84435c646a27ad0f922e5205c13eb3" kindref="member">mag</ref>; e Configura os valores padrões da matrizes <ref refid="classekf_1_1EKF_1a6ac75b28b1066175ed3d3dd4ff861f8f" kindref="member">F</ref>, <ref refid="classekf_1_1EKF_1aa942935955d39b9e6125bbfe7deb02f1" kindref="member">G</ref> e <ref refid="classekf_1_1EKF_1ad468c35e1497e23df1a26d6dbbe0eb67" kindref="member">H</ref>. </para>        </detaileddescription>
        <inbodydescription>
<para>HACK:<xrefsect id="hack_1_hack000001"><xreftitle>( ͡❛ ͜ʖ ͡❛) </xreftitle><xrefdescription><para><ref refid="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" kindref="member">accel</ref>, <ref refid="classekf_1_1EKF_1af990ea0dbcd3f286f04584ab663d08e6" kindref="member">gyro</ref> e <ref refid="classekf_1_1EKF_1a3f84435c646a27ad0f922e5205c13eb3" kindref="member">mag</ref> são ponteiros. Quando as medidas são atualizadas na biblioteca <ref refid="classIMU" kindref="compound">IMU</ref>, o vetor é modificado na <ref refid="classekf_1_1EKF" kindref="compound">EKF</ref>. </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="22" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="30" bodyend="48"/>
        <references refid="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" compoundref="EKF_8h" startline="28">accel</references>
        <references refid="classTIME_1a8cd98765b05a23aa7afe8fa5234b9695" compoundref="TIME_8cpp" startline="21" endline="24">TIME::begin</references>
        <references refid="classIMU_1ae0d964d2f8ec122be068c41b84bc18a8" compoundref="IMU_8cpp" startline="20" endline="106">IMU::begin</references>
        <references refid="classekf_1_1EKF_1a6ac75b28b1066175ed3d3dd4ff861f8f" compoundref="EKF_8h" startline="95">F</references>
        <references refid="classekf_1_1EKF_1aa942935955d39b9e6125bbfe7deb02f1" compoundref="EKF_8h" startline="99">G</references>
        <references refid="GPS_8h_1a35c55bcf9a6f5a52f34cb1ab02c91479" compoundref="GPS_8h" startline="142" endline="245">gpsSetup</references>
        <references refid="classekf_1_1EKF_1af990ea0dbcd3f286f04584ab663d08e6" compoundref="EKF_8h" startline="34">gyro</references>
        <references refid="classekf_1_1EKF_1ad468c35e1497e23df1a26d6dbbe0eb67" compoundref="EKF_8h" startline="103">H</references>
        <references refid="classekf_1_1EKF_1a3f84435c646a27ad0f922e5205c13eb3" compoundref="EKF_8h" startline="36">mag</references>
        <references refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" compoundref="EKF_8h" startline="71">n</references>
        <references refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" compoundref="EKF_8h" startline="69">p</references>
        <referencedby refid="main_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="main_8cpp" startline="37" endline="44">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1a651814ff64d234394572e2e7c5703a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::loopEKF</definition>
        <argsstring>()</argsstring>
        <name>loopEKF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loop do Filtro de Kalaman </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="24" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="52" bodyend="57"/>
        <references refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</references>
        <references refid="classekf_1_1EKF_1a94bc601335d20c0a058e8e8600d912e7" compoundref="EKF_8cpp" startline="179" endline="195">updateH</references>
        <references refid="classekf_1_1EKF_1a84048d25ebfb6431d7b1372b7315a7a3" compoundref="EKF_8cpp" startline="106" endline="148">updateOfMeasurements</references>
        <references refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</references>
        <referencedby refid="main_8cpp_1aa561fc46a0358a47fa9151f211523ba0" compoundref="main_8cpp" startline="16" endline="23">core_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1a84048d25ebfb6431d7b1372b7315a7a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::updateOfMeasurements</definition>
        <argsstring>()</argsstring>
        <name>updateOfMeasurements</name>
        <briefdescription>
<para>Atualiza a medicao a partir dos sensores da unidade Margin e GPS. </para>        </briefdescription>
        <detaileddescription>
<para>Faz a leitura dos sensores da MARG atualizando os vetores <ref refid="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" kindref="member">accel</ref>, <ref refid="classekf_1_1EKF_1af990ea0dbcd3f286f04584ab663d08e6" kindref="member">gyro</ref> e <ref refid="classekf_1_1EKF_1a3f84435c646a27ad0f922e5205c13eb3" kindref="member">mag</ref> e ElaspsedTime <ref refid="classekf_1_1EKF_1aee84ca91742c11dd89683930a58d59e3" kindref="member">dt</ref>. <simplesect kind="attention"><para>ubxMessage.navVelned possui as medidas em centimetros </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><simplesect kind="note"><para>MT_NONE é avalidado primeiro uma vez que a frequência do GPS é menor que a da MARG.</para></simplesect>
<xrefsect id="todo_1_todo000002"><xreftitle>Futuras Atividades</xreftitle><xrefdescription><para>É possível que essas contas sejam realizadas no cabeçalho, eliminando-se alguns condicionais abaixo. </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="63" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="106" bodyend="148"/>
        <references refid="classTIME_1a51b6020daf09773ef3948cf6b9ccd736" compoundref="TIME_8cpp" startline="32" endline="38">TIME::computeElapsedTime</references>
        <references refid="classekf_1_1EKF_1acacdb7f209258937a6b1d21ab19a1a64" compoundref="EKF_8h" startline="113">deltaYObs</references>
        <references refid="classekf_1_1EKF_1aee84ca91742c11dd89683930a58d59e3" compoundref="EKF_8h" startline="26">dt</references>
        <references refid="classekf_1_1EKF_1a8d016a5adf9aa5f33a8c9e1f7dd73592" compoundref="EKF_8h" startline="65">messageGPS</references>
        <references refid="GPS_8h_1a9730e8d0bbbe3f1515ed1d0b2acda1e1abc121fb87333b0e9a243876a94f4cc97" compoundref="GPS_8h" startline="138">MT_NAV_POSLLH</references>
        <references refid="GPS_8h_1a9730e8d0bbbe3f1515ed1d0b2acda1e1a850b8feaf03997bd2be8b2a14ad8d691" compoundref="GPS_8h" startline="138">MT_NAV_VELNED</references>
        <references refid="GPS_8h_1a9730e8d0bbbe3f1515ed1d0b2acda1e1ad2e3f1bdeae0fa235b7dfe6656c46f14" compoundref="GPS_8h" startline="138">MT_NONE</references>
        <references refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" compoundref="EKF_8h" startline="71">n</references>
        <references refid="unionUBXMessage_1a11b04d364c078d65eba35c53cdb1d392" compoundref="GPS_8h" startline="130">UBXMessage::navVelned</references>
        <references refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" compoundref="EKF_8h" startline="69">p</references>
        <references refid="GPS_8h_1ad604e63cc857e5663dfba96c37c66bc7" compoundref="GPS_8h" startline="264" endline="348">processGPS</references>
        <references refid="classekf_1_1EKF_1a62d97c4efde36112d3c59afa88d7bcfb" compoundref="EKF_8h" startline="58">r</references>
        <references refid="classIMU_1ac574728dbbc752155239a35c8bbd6e79" compoundref="IMU_8cpp" startline="277" endline="322">IMU::readSensor</references>
        <references refid="GPS_8h_1a4ff3f4ce55f117a43c4e117d850ca5a8" compoundref="GPS_8h" startline="140">ubxMessage</references>
        <references refid="structNAV__VELNED__STRUCT_1aba8dab80ab09f215c12ed9d103de2097" compoundref="GPS_8h" startline="64">NAV_VELNED_STRUCT::velD</references>
        <references refid="structNAV__VELNED__STRUCT_1ac7dd25d45876ad638d2926a07f82347c" compoundref="GPS_8h" startline="62">NAV_VELNED_STRUCT::velE</references>
        <references refid="structNAV__VELNED__STRUCT_1ac0328eba082ead963e3c617d9263c51e" compoundref="GPS_8h" startline="60">NAV_VELNED_STRUCT::velN</references>
        <referencedby refid="classekf_1_1EKF_1a651814ff64d234394572e2e7c5703a43" compoundref="EKF_8cpp" startline="52" endline="57">loopEKF</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1a64300affd8bd2b282ac5de510e370e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::updateInovations</definition>
        <argsstring>()</argsstring>
        <name>updateInovations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::integrationOfStates</definition>
        <argsstring>()</argsstring>
        <name>integrationOfStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Observações preditas</para><para>Integra os estado <ref refid="classekf_1_1EKF_1aa38bc83dfb656519cfcda0c0a589ef16" kindref="member">q</ref> e <ref refid="classekf_1_1EKF_1a62d97c4efde36112d3c59afa88d7bcfb" kindref="member">r</ref>;. </para>        </detaileddescription>
        <inbodydescription>
<para><simplesect kind="warning"><para>Modifica-se o bias da classe imu na função <ref refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" kindref="member">updateStates()</ref>. </para></simplesect>
</para>        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="116" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="199" bodyend="212"/>
        <references refid="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" compoundref="EKF_8h" startline="28">accel</references>
        <references refid="classekf_1_1EKF_1aee84ca91742c11dd89683930a58d59e3" compoundref="EKF_8h" startline="26">dt</references>
        <references refid="classekf_1_1EKF_1af990ea0dbcd3f286f04584ab663d08e6" compoundref="EKF_8h" startline="34">gyro</references>
        <references refid="classekf_1_1EKF_1a2f7f579eb38461f7396cca2a9a846bbb" compoundref="EKF_8h" startline="62">mcd</references>
        <references refid="classekf_1_1EKF_1a7225ed157eefaf96a9b98b0683bd3f6d" compoundref="EKF_8h" startline="32">navegationGravity</references>
        <references refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" compoundref="EKF_8h" startline="69">p</references>
        <references refid="classekf_1_1EKF_1aa38bc83dfb656519cfcda0c0a589ef16" compoundref="EKF_8h" startline="41">q</references>
        <references refid="classekf_1_1EKF_1a62d97c4efde36112d3c59afa88d7bcfb" compoundref="EKF_8h" startline="58">r</references>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::updateStates</definition>
        <argsstring>()</argsstring>
        <name>updateStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Atualiza os estados predidos com os erros estimados. </para>        </detaileddescription>
        <inbodydescription>
<para><simplesect kind="attention"><para>dcm é uma referência. </para></simplesect>
</para>        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="117" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="61" bodyend="79"/>
        <references refid="classIMU_1a9a145f45e2e08cae0f363747c5603bd1" compoundref="IMU_8h" startline="75">IMU::_biasAccel</references>
        <references refid="classIMU_1a9d22cd7cb7bb93f2e04aa713aed73532" compoundref="IMU_8h" startline="78">IMU::_biasGyro</references>
        <references refid="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" compoundref="EKF_8h" startline="28">accel</references>
        <references refid="classekf_1_1EKF_1a1a015f96a2f51461f6132eab3e301a94" compoundref="EKF_8h" startline="111">deltaChi</references>
        <references refid="classekf_1_1EKF_1ad6e815d418433b79328bd90dd6ef1344" compoundref="EKF_8h" startline="60">deltar</references>
        <references refid="classekf_1_1EKF_1adc3de40884689bb897ebe90979d6f28f" compoundref="EKF_8h" startline="43">euler</references>
        <references refid="classekf_1_1EKF_1a2f7f579eb38461f7396cca2a9a846bbb" compoundref="EKF_8h" startline="62">mcd</references>
        <references refid="classekf_1_1EKF_1a7225ed157eefaf96a9b98b0683bd3f6d" compoundref="EKF_8h" startline="32">navegationGravity</references>
        <references refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" compoundref="EKF_8h" startline="69">p</references>
        <references refid="classekf_1_1EKF_1aa38bc83dfb656519cfcda0c0a589ef16" compoundref="EKF_8h" startline="41">q</references>
        <references refid="classekf_1_1EKF_1a62d97c4efde36112d3c59afa88d7bcfb" compoundref="EKF_8h" startline="58">r</references>
        <referencedby refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" compoundref="EKF_8cpp" startline="216" endline="231">updateStage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::predictionStage</definition>
        <argsstring>()</argsstring>
        <name>predictionStage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Integra os estados e a matriz de covariancia a priori do filtro. </para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Futuras Atividades</xreftitle><xrefdescription><para>A matriz GQG* tem apenas uma parte modificada em cada iteração e é usada apenas na propagação da covariância. Pode-se otimizar gerando apenas uma matriz e reduzindo o numero de multiplicações. </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="118" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="83" bodyend="99"/>
        <references refid="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" compoundref="EKF_8h" startline="28">accel</references>
        <references refid="classekf_1_1EKF_1ad6e815d418433b79328bd90dd6ef1344" compoundref="EKF_8h" startline="60">deltar</references>
        <references refid="classekf_1_1EKF_1aee84ca91742c11dd89683930a58d59e3" compoundref="EKF_8h" startline="26">dt</references>
        <references refid="classekf_1_1EKF_1a94669b63095dd91e43ab645c3e930643" compoundref="EKF_8h" startline="97">fi</references>
        <references refid="classekf_1_1EKF_1aa942935955d39b9e6125bbfe7deb02f1" compoundref="EKF_8h" startline="99">G</references>
        <references refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" compoundref="EKF_8cpp" startline="199" endline="212">integrationOfStates</references>
        <references refid="classekf_1_1EKF_1a3f84435c646a27ad0f922e5205c13eb3" compoundref="EKF_8h" startline="36">mag</references>
        <references refid="classekf_1_1EKF_1a3ba07296b1ad2a2b1b00cf41ef3ff996" compoundref="EKF_8h" startline="39">magOrthogonalGrav</references>
        <references refid="classekf_1_1EKF_1a2f7f579eb38461f7396cca2a9a846bbb" compoundref="EKF_8h" startline="62">mcd</references>
        <references refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" compoundref="EKF_8h" startline="71">n</references>
        <references refid="classekf_1_1EKF_1af3d9f149c542dae8e23b8bb6a71e896d" compoundref="EKF_8h" startline="101">P</references>
        <references refid="classekf_1_1EKF_1a4069373f775dd5d06c503ec5a20b06cd" compoundref="EKF_8h" startline="81">Q</references>
        <references refid="classekf_1_1EKF_1ae6c0295a32e90b9594ad10bb1061b62b" compoundref="EKF_8cpp" startline="152" endline="162">updateF_G</references>
        <references refid="classekf_1_1EKF_1ad5949e9e8eae2938a332af03a8ec353b" compoundref="EKF_8cpp" startline="168" endline="173">updatefi</references>
        <referencedby refid="classekf_1_1EKF_1a651814ff64d234394572e2e7c5703a43" compoundref="EKF_8cpp" startline="52" endline="57">loopEKF</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::updateStage</definition>
        <argsstring>()</argsstring>
        <name>updateStage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Etapa de atualização. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="119" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="216" bodyend="231"/>
        <references refid="classekf_1_1EKF_1a1a015f96a2f51461f6132eab3e301a94" compoundref="EKF_8h" startline="111">deltaChi</references>
        <references refid="classekf_1_1EKF_1acacdb7f209258937a6b1d21ab19a1a64" compoundref="EKF_8h" startline="113">deltaYObs</references>
        <references refid="classekf_1_1EKF_1ad468c35e1497e23df1a26d6dbbe0eb67" compoundref="EKF_8h" startline="103">H</references>
        <references refid="classekf_1_1EKF_1abd4e82d28621f8cf617f19a42a11eb29" compoundref="EKF_8h" startline="105">K</references>
        <references refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" compoundref="EKF_8h" startline="71">n</references>
        <references refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" compoundref="EKF_8h" startline="69">p</references>
        <references refid="classekf_1_1EKF_1af3d9f149c542dae8e23b8bb6a71e896d" compoundref="EKF_8h" startline="101">P</references>
        <references refid="classekf_1_1EKF_1a5f29f91470f99c48240dfd41f1fc32e6" compoundref="EKF_8h" startline="88">R</references>
        <references refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" compoundref="EKF_8cpp" startline="61" endline="79">updateStates</references>
        <referencedby refid="classekf_1_1EKF_1a651814ff64d234394572e2e7c5703a43" compoundref="EKF_8cpp" startline="52" endline="57">loopEKF</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1ae6c0295a32e90b9594ad10bb1061b62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::updateF_G</definition>
        <argsstring>()</argsstring>
        <name>updateF_G</name>
        <briefdescription>
<para>Atualiza matrix lineariza de estados <ref refid="classekf_1_1EKF_1a6ac75b28b1066175ed3d3dd4ff861f8f" kindref="member">F</ref> e a matrix <ref refid="classekf_1_1EKF_1aa942935955d39b9e6125bbfe7deb02f1" kindref="member">G</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="hack_1_hack000002"><xreftitle>( ͡❛ ͜ʖ ͡❛) </xreftitle><xrefdescription><para>Apenas parte da matrix é atualizada </para></xrefdescription></xrefsect></para><para><simplesect kind="note"><para>A única parte atulizada da matriz é o bloco 3x3 quando há medidas do gps apenas. </para></simplesect>
</para>        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="120" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="152" bodyend="162"/>
        <references refid="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" compoundref="EKF_8h" startline="28">accel</references>
        <references refid="classekf_1_1EKF_1a6ac75b28b1066175ed3d3dd4ff861f8f" compoundref="EKF_8h" startline="95">F</references>
        <references refid="classekf_1_1EKF_1aa942935955d39b9e6125bbfe7deb02f1" compoundref="EKF_8h" startline="99">G</references>
        <references refid="classekf_1_1EKF_1af990ea0dbcd3f286f04584ab663d08e6" compoundref="EKF_8h" startline="34">gyro</references>
        <references refid="classekf_1_1EKF_1a2f7f579eb38461f7396cca2a9a846bbb" compoundref="EKF_8h" startline="62">mcd</references>
        <references refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" compoundref="EKF_8h" startline="69">p</references>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1a94bc601335d20c0a058e8e8600d912e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::updateH</definition>
        <argsstring>()</argsstring>
        <name>updateH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Atualiza matrix de sessitividade <ref refid="classekf_1_1EKF_1ad468c35e1497e23df1a26d6dbbe0eb67" kindref="member">H</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>Vetor gravitacional predito. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Campo magnético predito. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><simplesect kind="warning"><para>Multiplicado apenas a respectiva coluna da matrix #dcm </para></simplesect>
<xrefsect id="todo_1_todo000004"><xreftitle>Futuras Atividades</xreftitle><xrefdescription><para>Esta parte pode ser otimizada. </para></xrefdescription></xrefsect></para><para>Vetor de de predição da gravidade normalizada no sistema de navegação.</para><para><simplesect kind="note"><para>Atualiza as 6 primeiras linas das três primeiras colunas.</para></simplesect>
<simplesect kind="note"><para>O vetor #predictedGravityField está normalizada. </para></simplesect>
</para>        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="121" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="179" bodyend="195"/>
        <references refid="classekf_1_1EKF_1acacdb7f209258937a6b1d21ab19a1a64" compoundref="EKF_8h" startline="113">deltaYObs</references>
        <references refid="classekf_1_1EKF_1ad468c35e1497e23df1a26d6dbbe0eb67" compoundref="EKF_8h" startline="103">H</references>
        <references refid="classekf_1_1EKF_1a3ba07296b1ad2a2b1b00cf41ef3ff996" compoundref="EKF_8h" startline="39">magOrthogonalGrav</references>
        <references refid="classekf_1_1EKF_1a2f7f579eb38461f7396cca2a9a846bbb" compoundref="EKF_8h" startline="62">mcd</references>
        <referencedby refid="classekf_1_1EKF_1a651814ff64d234394572e2e7c5703a43" compoundref="EKF_8cpp" startline="52" endline="57">loopEKF</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1ad5949e9e8eae2938a332af03a8ec353b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::updatefi</definition>
        <argsstring>()</argsstring>
        <name>updatefi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000003"><xreftitle>Futuras Atividades</xreftitle><xrefdescription><para>Oportunidade de otimização. Talves, na programação, a matrix F não precise existir e seja absorvida pela matrix fi. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="122" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="168" bodyend="173"/>
        <references refid="classekf_1_1EKF_1aee84ca91742c11dd89683930a58d59e3" compoundref="EKF_8h" startline="26">dt</references>
        <references refid="classekf_1_1EKF_1a6ac75b28b1066175ed3d3dd4ff861f8f" compoundref="EKF_8h" startline="95">F</references>
        <references refid="classekf_1_1EKF_1a94669b63095dd91e43ab645c3e930643" compoundref="EKF_8h" startline="97">fi</references>
        <references refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" compoundref="EKF_8h" startline="71">n</references>
        <referencedby refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" compoundref="EKF_8cpp" startline="83" endline="99">predictionStage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classekf_1_1EKF_1aecdea0922a84bc38cdd78e86657d6ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ekf::EKF::calibrationMethods</definition>
        <argsstring>(gpio_num_t &amp;_porta_led)</argsstring>
        <name>calibrationMethods</name>
        <param>
          <type>gpio_num_t &amp;</type>
          <declname>_porta_led</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodos de calibracao <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_porta_led</parametername>
</parameternamelist>
<parameterdescription>
<para>[description] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/EKF/EKF.h" line="123" column="1" bodyfile="lib/EKF/EKF.cpp" bodystart="237" bodyend="254"/>
        <references refid="classIMU_1a3546779010d9128859f465195eff77f5" compoundref="IMU_8cpp" startline="438" endline="452">IMU::calibracaoMagnetometro</references>
        <references refid="classIMU_1a5f096cb37d4b16851381bf09d6809403" compoundref="IMU_8cpp" startline="330" endline="338">IMU::calibraGyro</references>
        <references refid="classTIME_1a51b6020daf09773ef3948cf6b9ccd736" compoundref="TIME_8cpp" startline="32" endline="38">TIME::computeElapsedTime</references>
        <referencedby refid="main_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="main_8cpp" startline="37" endline="44">setup</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>ekf::EKF</label>
        <link refid="classekf_1_1EKF"/>
      </node>
    </collaborationgraph>
    <location file="lib/EKF/EKF.h" line="18" column="1" bodyfile="lib/EKF/EKF.h" bodystart="18" bodyend="126"/>
    <listofallmembers>
      <member refid="classekf_1_1EKF_1a30d3adf68cc6ee599fec8fa45a697bbb" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>accel</name></member>
      <member refid="classekf_1_1EKF_1af52f661717f56b3deee7b4f42ba80dc5" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>begin</name></member>
      <member refid="classekf_1_1EKF_1aecdea0922a84bc38cdd78e86657d6ae9" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>calibrationMethods</name></member>
      <member refid="classekf_1_1EKF_1a1a015f96a2f51461f6132eab3e301a94" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>deltaChi</name></member>
      <member refid="classekf_1_1EKF_1ad6e815d418433b79328bd90dd6ef1344" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>deltar</name></member>
      <member refid="classekf_1_1EKF_1acacdb7f209258937a6b1d21ab19a1a64" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>deltaYObs</name></member>
      <member refid="classekf_1_1EKF_1aee84ca91742c11dd89683930a58d59e3" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>dt</name></member>
      <member refid="classekf_1_1EKF_1aea7bda69ce19f724930eb8c691272508" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>EKF</name></member>
      <member refid="classekf_1_1EKF_1adc3de40884689bb897ebe90979d6f28f" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>euler</name></member>
      <member refid="classekf_1_1EKF_1a6ac75b28b1066175ed3d3dd4ff861f8f" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>F</name></member>
      <member refid="classekf_1_1EKF_1a94669b63095dd91e43ab645c3e930643" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>fi</name></member>
      <member refid="classekf_1_1EKF_1aa942935955d39b9e6125bbfe7deb02f1" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>G</name></member>
      <member refid="classekf_1_1EKF_1af990ea0dbcd3f286f04584ab663d08e6" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>gyro</name></member>
      <member refid="classekf_1_1EKF_1ad468c35e1497e23df1a26d6dbbe0eb67" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>H</name></member>
      <member refid="classekf_1_1EKF_1a4bd0d4a6ec2787cf1c690fcf154a43c5" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>integrationOfStates</name></member>
      <member refid="classekf_1_1EKF_1abd4e82d28621f8cf617f19a42a11eb29" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>K</name></member>
      <member refid="classekf_1_1EKF_1add206b1c04f4332dd99d1c1f495ed981" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>localGravity</name></member>
      <member refid="classekf_1_1EKF_1a651814ff64d234394572e2e7c5703a43" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>loopEKF</name></member>
      <member refid="classekf_1_1EKF_1a3f84435c646a27ad0f922e5205c13eb3" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>mag</name></member>
      <member refid="classekf_1_1EKF_1a3ba07296b1ad2a2b1b00cf41ef3ff996" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>magOrthogonalGrav</name></member>
      <member refid="classekf_1_1EKF_1a2f7f579eb38461f7396cca2a9a846bbb" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>mcd</name></member>
      <member refid="classekf_1_1EKF_1a8d016a5adf9aa5f33a8c9e1f7dd73592" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>messageGPS</name></member>
      <member refid="classekf_1_1EKF_1af36cffd92f910adbebe2d79fe5b02f87" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>n</name></member>
      <member refid="classekf_1_1EKF_1a7225ed157eefaf96a9b98b0683bd3f6d" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>navegationGravity</name></member>
      <member refid="classekf_1_1EKF_1aae13945192d53d1920ddc26b61c96477" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>p</name></member>
      <member refid="classekf_1_1EKF_1af3d9f149c542dae8e23b8bb6a71e896d" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>P</name></member>
      <member refid="classekf_1_1EKF_1ae27545818f775f4aa6b999e012a851e3" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>predictionStage</name></member>
      <member refid="classekf_1_1EKF_1aa38bc83dfb656519cfcda0c0a589ef16" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>q</name></member>
      <member refid="classekf_1_1EKF_1a4069373f775dd5d06c503ec5a20b06cd" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>Q</name></member>
      <member refid="classekf_1_1EKF_1a62d97c4efde36112d3c59afa88d7bcfb" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>r</name></member>
      <member refid="classekf_1_1EKF_1a5f29f91470f99c48240dfd41f1fc32e6" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>R</name></member>
      <member refid="classekf_1_1EKF_1a2bc28e167984b8b6a81953867a1dd5c2" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>sigma_acel</name></member>
      <member refid="classekf_1_1EKF_1ac97bb3b83e3414e2f51b97c9cb5bd68e" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>sigma_bias_acel</name></member>
      <member refid="classekf_1_1EKF_1a4af1f4b86d797c10820b611fb587370a" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>sigma_bias_giro</name></member>
      <member refid="classekf_1_1EKF_1a2ab740148a4eff83947603d4338ff071" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>sigma_giro</name></member>
      <member refid="classekf_1_1EKF_1aa9f5162233aa16adf828d3d4399320fe" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>sigma_mag</name></member>
      <member refid="classekf_1_1EKF_1a9143cf103c9ff087f4fe71f53fefe19e" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>sigma_vel</name></member>
      <member refid="classekf_1_1EKF_1ae6c0295a32e90b9594ad10bb1061b62b" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>updateF_G</name></member>
      <member refid="classekf_1_1EKF_1ad5949e9e8eae2938a332af03a8ec353b" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>updatefi</name></member>
      <member refid="classekf_1_1EKF_1a94bc601335d20c0a058e8e8600d912e7" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>updateH</name></member>
      <member refid="classekf_1_1EKF_1a64300affd8bd2b282ac5de510e370e2b" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>updateInovations</name></member>
      <member refid="classekf_1_1EKF_1a84048d25ebfb6431d7b1372b7315a7a3" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>updateOfMeasurements</name></member>
      <member refid="classekf_1_1EKF_1ad4c19d26e9735c356dc8767793939efb" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>updateStage</name></member>
      <member refid="classekf_1_1EKF_1a7bcbdc98c071241367a17d698624a5a1" prot="public" virt="non-virtual"><scope>ekf::EKF</scope><name>updateStates</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
